"use strict";(self.webpackChunknitmod=self.webpackChunknitmod||[]).push([[3217],{6995:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>r});var n=t(5893),i=t(1151);const a={sidebar_position:2,id:"installation",title:"Installation",hide_title:!1,hide_table_of_contents:!1},o=void 0,l={id:"installation",title:"Installation",description:"Download",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/nitmod/docs/installation",draft:!1,unlisted:!1,editUrl:"https://github.com/sebdanielsson/nitmod/edit/main/docs/installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"installation",title:"Installation",hide_title:!1,hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/nitmod/docs/introduction"},next:{title:"Cvar Reference",permalink:"/nitmod/docs/cvar-reference"}},d={},r=[{value:"Download",id:"download",level:2},{value:"Install/Update",id:"installupdate",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Setting up the SQLite database",id:"setting-up-the-sqlite-database",level:3},{value:"Admin levels",id:"admin-levels",level:3},{value:"Description",id:"description",level:3},{value:"Custom commands",id:"custom-commands",level:3},{value:"Description custom commands",id:"description-custom-commands",level:4},{value:"Custom votes",id:"custom-votes",level:3},{value:"Description custom votes",id:"description-custom-votes",level:4}];function c(e){const s={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.ah)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"download",children:"Download"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"http://etmods.net/downloads/nitmod_2.3.4-b4.zip",children:"Nitmod 2.3.4 Beta 4"})}),"\n",(0,n.jsx)(s.h2,{id:"installupdate",children:"Install/Update"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Stop the server."}),"\n",(0,n.jsx)(s.li,{children:"If installing for the first time, create a nitmod folder next to your etmain folder."}),"\n",(0,n.jsx)(s.li,{children:"Copy the .pk3 and the library file to the nitmod folder. If you're running a Windows server, it's the .dll. For macOS it's qagame_mac. For Linux x86 and x64 it's i386.so and x86_64.so respectively. If you're making an upgrade, delete the old .pk3."}),"\n",(0,n.jsxs)(s.li,{children:["If installing for the first time, change your server's ",(0,n.jsx)(s.code,{children:"fs_game"})," cvar to ",(0,n.jsx)(s.code,{children:"nitmod"})," (either in your control panel for rented game servers, or in your startup command if you're hosting it yourself)."]}),"\n",(0,n.jsx)(s.li,{children:"Start the server."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsxs)(s.p,{children:["N!tmod releases come with a sample configuration file ",(0,n.jsx)(s.a,{target:"_blank",href:t(6752).Z+"",children:"nitmod-sample.cfg"}),". It should be saved as ",(0,n.jsx)(s.code,{children:"nitmod/nitmod.cfg"}),". It contains every mod cvar set to it's default value, and a small description of what it is used for.\nFor more information, read the ",(0,n.jsx)(s.a,{href:"cvar-reference",children:"Cvar Reference"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"setting-up-the-sqlite-database",children:"Setting up the SQLite database"}),"\n",(0,n.jsxs)(s.p,{children:["Some features, like the admin system, ",(0,n.jsx)(s.a,{href:"cvar-reference#g_xpsave",children:"g_XPSave"})," and ",(0,n.jsx)(s.a,{href:"cvar-reference#n_maprecords",children:"n_mapRecords"})," are disabled by default since they need access to a SQLite database to function. To create the database, use the cvar ",(0,n.jsx)(s.a,{href:"cvar-reference#n_sqlitedbpath",children:"n_SQLiteDBPath"})," to set a location for the SQLite database file to reside on. The database file will be automaticly created if the above cvar is set correctly and the server process has read/write permissions on the specified path. If an invalid filename is provided, N!tmod will attempt to create the database inside the nitmod directory."]}),"\n",(0,n.jsx)(s.h3,{id:"admin-levels",children:"Admin levels"}),"\n",(0,n.jsxs)(s.p,{children:["To setup admin levels on your server, you need to configure ",(0,n.jsx)(s.code,{children:"nitmod/levels.db"}),". Here is a ",(0,n.jsx)(s.a,{target:"_blank",href:t(2984).Z+"",children:"levels-sample.db"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"description",children:"Description"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-raw",children:"**********  // Delimiter (10 *) Must IMPERATIVELY be placed BEFORE every level.\nlevel =     // Level Number\nname =      // Level Name\nflags =     // Flags\ngtext =     // Optional Greeting Text (user's greeting text overrides this value)\ngsound =    // Optional Greeting Sound (user's greeting sound overrides this value)\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This file can be edited ingame (or through rcon) using ",(0,n.jsx)(s.code,{children:"!levedit"}),", ",(0,n.jsx)(s.code,{children:"!levadd"})," and ",(0,n.jsx)(s.code,{children:"!levdelete"})," commands.\nThe file will automaticly be overwritten when using one of these commands.\nIf you manually edit this file while the server is running, use ",(0,n.jsx)(s.code,{children:"!readconfig"})," command to load modifications.\nUse ",(0,n.jsx)(s.code,{children:"!levlist"})," and ",(0,n.jsx)(s.code,{children:"!levinfo"})," commands to display informations about existing levels."]}),"\n",(0,n.jsx)(s.h3,{id:"custom-commands",children:"Custom commands"}),"\n",(0,n.jsxs)(s.p,{children:["N!tmod allows adding custom commands to the existing admin system commands set.\nTo setup custom commands on your server, you must create ",(0,n.jsx)(s.code,{children:"nitmod/commands.db"}),". Here is ",(0,n.jsx)(s.a,{target:"_blank",href:t(417).Z+"",children:"commands-sample.db"}),"."]}),"\n",(0,n.jsx)(s.h4,{id:"description-custom-commands",children:"Description custom commands"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-raw",children:'**********  // Delimiter (10 *) Must IMPERATIVELY be placed BEFORE every command.\nname =      // Command name (ex: "test")\nexec =      // Command sent to server (ex: chat "^3Test command")\ndesc =      // Text displayed in !help cmdname (ex: "Test command")\nlevels =    // Levels having access to this command, delimited by spaces (ex: 0 1 2)\n'})}),"\n",(0,n.jsxs)(s.p,{children:["If you manually edit this file while the server is running, use ",(0,n.jsx)(s.code,{children:"!readconfig"})," command to load modifications."]}),"\n",(0,n.jsx)(s.h3,{id:"custom-votes",children:"Custom votes"}),"\n",(0,n.jsxs)(s.p,{children:["To setup custom votes on your server, you must create ",(0,n.jsx)(s.code,{children:"nitmod/votes.db"}),". Here is ",(0,n.jsx)(s.a,{target:"_blank",href:t(2992).Z+"",children:"votes-sample.db"}),"."]}),"\n",(0,n.jsx)(s.h4,{id:"description-custom-votes",children:"Description custom votes"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-raw",children:"**********  // Delimiter (10 *) Must IMPERATIVELY be placed BEFORE every vote.\nname =      // max 20 chars vote name (to use with /callvote)\nmessage =   // max 256 chars message displayed on clients when vote is called\nhelp =      // max 256 chars vote description (ex: /callvote *name* ?)\nexec =      // max 1024 chars command to execute on server side when vote passes\npasstext =  // max 256 chars message displayed on clients if vote passes\nlevels =    // max 64 levels allowed to call this vote (if empty, vote is available for all levels)\n"})}),"\n",(0,n.jsx)(s.p,{children:"If you manually edit this file while the server is running, use !readconfig command to load modifications."}),"\n",(0,n.jsxs)(s.p,{children:["To call one a custom vote, use the ",(0,n.jsx)(s.code,{children:"/callvote"})," command in your console, followed by the custom vote name.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.strong,{children:"Example:"})," ",(0,n.jsx)(s.code,{children:"/callvote mycustomvote"})]})]})}function m(e={}){const{wrapper:s}={...(0,i.ah)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},417:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/files/commands-sample-de15896ed3e26f40c3c2ec67ff2730de.db"},2984:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/files/levels-sample-d237ef92521f3fa5071033086a58037f.db"},6752:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/files/nitmod-sample-b73a820d3e6588e92cec086986024518.cfg"},2992:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/files/votes-sample-11231ee9c663f17678ade61afa2d45ad.db"},1151:(e,s,t)=>{t.d(s,{ah:()=>a});var n=t(7294);const i=n.createContext({});function a(e){const s=n.useContext(i);return n.useMemo((()=>"function"==typeof e?e(s):{...s,...e}),[s,e])}}}]);